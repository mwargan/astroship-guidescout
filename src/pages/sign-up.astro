---
import FullpageLayout from "@layouts/FullpageLayout.astro";
import Button from "@components/ui/button.astro";

const steps = [
  {
    title: "Whatâ€™s your name?",
    subtitle: "Hey there, guide!",
  },
  {
    title: "What city do you want to guide in?",
    subtitle: "Tell us about your preferences.",
  },
  {
    title: "What languages can you speak?",
    subtitle: "Tell us about you.",
  },
  {
    title: "What are your qualifications?",
    subtitle: "Tell us about you.",
  },
  {
    title: "How can you be reached?",
    subtitle: "Finish setting up your GuideScout account.",
  },
];

let currentStep = 0;

const { title, subtitle } = steps[currentStep];
---

<FullpageLayout title={title} subtitle={subtitle}>
  <form
    data-netlify="true"
    method="POST"
    id="sign-up"
    class="needs-validation"
    action="/signed-up"
    name="sign-up"
    novalidate>
    <input
      type="checkbox"
      class="hidden"
      style="display:none"
      name="botcheck"
    />
    <!-- Referral code input field -->
    <input id="referral" type="hidden" name="referral" />
    <fieldset>
      <div class="mb-4">
        <label for="name">First Name</label>
        <input
          type="text"
          placeholder="First Name"
          required
          class="w-full px-3 py-2 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="name"
          autofocus
          autocomplete="given-name"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please provide your first name.
        </div>
      </div>
      <div class="mb-4">
        <label for="surname">Surname</label>
        <input
          type="text"
          placeholder="Surname"
          required
          class="w-full px-3 py-2 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="surname"
          autocomplete="family-name"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please provide your first name.
        </div>
      </div>
    </fieldset>

    <!-- What city do you want to guide in -->
    <fieldset class="hidden">
      <div class="mb-4">
        <label for="city" class="sr-only">City</label>
        <input
          type="text"
          placeholder="City"
          required
          class="w-full px-3 py-2 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="city"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please provide the city you want to guide in.
        </div>
      </div>
      <!-- Put the button in the slot named Footer -->
    </fieldset>

    <!-- What languages can you speak? Checkbox of 5 most common languages -->
    <fieldset class="hidden">
      <div class="mb-4">
        <label for="languages" class="sr-only">Languages</label>
        <div class="flex flex-wrap gap-2 flex-col">
          <label
            ><input
              type="checkbox"
              name="languages"
              value="english"
              class="mr-2"
              checked
            />English</label
          >
          <label
            ><input
              type="checkbox"
              name="languages"
              value="spanish"
              class="mr-2"
            />Spanish</label
          >
          <label
            ><input
              type="checkbox"
              name="languages"
              value="french"
              class="mr-2"
            />French</label
          >
          <label
            ><input
              type="checkbox"
              name="languages"
              value="german"
              class="mr-2"
            />German</label
          >
          <label
            ><input
              type="checkbox"
              name="languages"
              value="italian"
              class="mr-2"
            />Italian</label
          >
        </div>
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please select at least one language.
        </div>
      </div>
    </fieldset>

    <!-- Qualifications -->
    <fieldset class="hidden">
      <div class="mb-4">
        <label for="qualifications" class="sr-only">Qualifications</label>
        <div class="flex flex-wrap gap-2 flex-col">
          <label
            ><input
              type="checkbox"
              name="qualifications"
              value="First Aid Certificate"
              class="mr-2"
              checked
            />First Aid Certificate</label
          >
          <label
            ><input
              type="checkbox"
              name="qualifications"
              value="Car Driving Licence"
              class="mr-2"
            />Car (B) Driving Licence</label
          >
          <label
            ><input
              type="checkbox"
              name="qualifications"
              value="PADI Dive Master Certification"
              class="mr-2"
            />PADI Dive Master Certification</label
          >
          <label
            ><input
              type="checkbox"
              name="qualifications"
              value="Tour Guide Certification"
              class="mr-2"
            />Tour Guide Certification</label
          >
          <label
            ><input
              type="checkbox"
              name="qualifications"
              value="Tourism Degree"
              class="mr-2"
            />Tourism Degree</label
          >
        </div>
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please select at least one qualification.
        </div>
      </div>
    </fieldset>

    <!-- Contact -->
    <fieldset class="hidden">
      <div class="mb-4">
        <label for="email_address">Email Address</label><input
          id="email_address"
          type="email"
          placeholder="Email Address"
          name="email"
          required
          class="w-full px-3 py-2 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        />
        <div class="empty-feedback text-red-400 text-sm mt-1">
          Please provide your email address.
        </div>
        <div class="invalid-feedback text-red-400 text-sm mt-1">
          Please provide a valid email address.
        </div>
      </div>
      <div class="mb-4">
        <label for="phone_number">Phone Number (starting with +)</label><input
          id="phone_number"
          type="tel"
          placeholder="Phone Number"
          name="phone"
          required
          class="w-full px-3 py-2 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          pattern="^\+[0-9]{1,15}$"
          minlength="7"
          maxlength="16"
          inputmode="tel"
          autocomplete="tel"
        />
        <div class="empty-feedback text-red-400 text-sm mt-1">
          Please provide your phone number.
        </div>
        <div class="invalid-feedback text-red-400 text-sm mt-1">
          Please provide a valid phone number.
        </div>
      </div>
    </fieldset>

    <!--  -->
  </form>
  <Button slot="footer" type="submit" id="next" form="sign-up">Next</Button>
  <a slot="footer" href="/sign-up" class="mt-1
   underline"
    >Already have an account?</a
  >
</FullpageLayout>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script define:vars={{ steps }}>
  let currentStep = 0;

  const form = document.getElementById("sign-up");

  // Get the referrer code from the URL if it exists
  const urlParams = new URLSearchParams(window.location.search);
  const referralCode = urlParams.get("referral");

  const nextButton = document.getElementById("next");

  // Set the referral code in the hidden input field
  if (referralCode) {
    document.getElementById("referral").value = referralCode;
  }

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    if (!isLastStep()) {
      // Trigger the next button click
      conditionallyGoToNextStep();
      return;
    }
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      const firstElementInvalid = form.querySelectorAll(":invalid")[0];

      //   Find which fieldset the invalid element is in
      let fieldset = firstElementInvalid.closest("fieldset");

      // Find the index of the fieldset
      let index = Array.from(form.querySelectorAll("fieldset")).indexOf(
        fieldset
      );

      // If the index is not the current step, go to that step
      if (index !== currentStep) {
        currentStep = index;
        updateStep();
      }
      return;
    }

    // Continue with form submission
    e.target.submit();

    // Save a signed-up state in local storage
    localStorage.setItem("signed-up", true);
  });

  const conditionallyGoToNextStep = () => {
    form.classList.add("was-validated");

    // Get all elements in the fieldset
    const fieldset = form.querySelectorAll("fieldset")[currentStep];
    const inputs = fieldset.querySelectorAll("input");

    // Check if all inputs are valid
    let allValid = true;
    inputs.forEach((input) => {
      if (!input.checkValidity()) {
        allValid = false;
      }
    });

    if (!allValid) {
      return;
    }

    form.classList.remove("was-validated");

    goToNextStep();
  };

  const goToNextStep = () => {
    if (!isLastStep()) {
      currentStep++;
      updateStep();
    }

    // if its the last step, replace the next button text with submit and type to submit
    if (isLastStep()) {
      nextButton.textContent = "Submit";
    }
  };

  const goToPrevStep = () => {
    if (currentStep > 0) {
      currentStep--;
      updateStep();
    }
  };

  const isLastStep = () => {
    return currentStep === steps.length - 1;
  };

  const updateStep = () => {
    const { title, subtitle } = steps[currentStep];
    document.querySelector("h1").textContent = title;
    document.querySelector("p").textContent = subtitle;

    // Hide all fieldsets by adding the hidden class
    form.querySelectorAll("fieldset").forEach((fieldset) => {
      fieldset.classList.add("hidden");
    });

    // Show the current fieldset
    form.querySelectorAll("fieldset")[currentStep].classList.remove("hidden");
  };

  updateStep();
</script>
